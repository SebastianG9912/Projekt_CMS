@page "/submit"
@inject HttpClient Http
@using Microsoft.Extensions.Configuration;
@using Models
@using System.Net.Http.Headers;
@using System.Net;
@using System.ComponentModel.DataAnnotations;
@inject IConfiguration Configuration

<div class="card card-body" style="font-size:1.1em; width:fit-content; margin:auto; margin-top:20px; background-color:#cccccc">
    <h2 class="card-title" style="font-size:x-large">Submit a new News Article</h2>
    
    <EditForm Model=@newsArticleDTO OnSubmit="@SendArticle" class="m-2" style="display:flex; flex-direction:column;">
        <label for="Title">Title</label>
        <InputText @bind-Value=newsArticleDTO.Title id="Title" />
        <label for="Text">Text</label>
        <InputTextArea @bind-Value=newsArticleDTO.Text id="Text" />

        <input type="submit" value="Create News Article" style="margin-top:10px"/>
    </EditForm>
</div>
    


@code {
    NewsArticleDTO newsArticleDTO = new NewsArticleDTO();
    public string strapi_api_url;

    public async Task SendArticle()
    {
        strapi_api_url = Configuration["AppSettings:STRAPI_API_URL"];
        var url = $"{strapi_api_url}/api/news-articles";

        var jwt = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjczMDE1NzM4LCJleHAiOjE2NzU2MDc3Mzh9.GPJ7X4J_sheTAL1MEvVCFVHeenQyhO7E3DBIJE9N6xg";
        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", jwt);
        var dto = new NewsArticleDTOData { Data = newsArticleDTO };
        await Http.PostAsJsonAsync<NewsArticleDTOData>(url, dto);
    }

    public class NewsArticleDTOData
    {
        public NewsArticleDTO Data { get; set; }
    }

    public class NewsArticleDTO
    {
        public string Title { get; set; }
        public string Text { get; set; }
    }
}