@page "/"
@inject HttpClient Http
@using Microsoft.Extensions.Configuration;
@using Models
@using System.Net.Http.Headers;
@inject IConfiguration Configuration

@if (allNewsArticles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <section class="text-gray-600 body-font">
        <div class="container px-5 py-4 mx-auto">
            <div class="flex flex-wrap">
                @foreach (var article in allNewsArticles.data)
                {
                    <div class="xl:w-1/4 md:w-1/2 p-4">
                        <div class="bg-gray-100 p-6 rounded-lg">
                            @foreach(var category in article.categories){
                                <div class="card" style="width:fit-content; padding:3px; margin-bottom:5px;">@category.Topic</div>
                            }
                            @if(article.Image != null)
                            {
                                <img class="h-40 rounded w-full object-cover object-center mb-6" src="@article.Image.Url" alt="content">                            
                            }
                            <h2 class="text-lg text-gray-900 font-medium title-font mb-4">@article.Title</h2>
                            <p>@article.Text</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
}


@code {
    private NewsArticles allNewsArticles = null;
    public string strapi_api_url;

    protected override async Task OnInitializedAsync()
    {
        strapi_api_url = Configuration["AppSettings:STRAPI_API_URL"];
        var url = $"{strapi_api_url}/api/news-articles?populate=*";

        //The jwt token used to validate if the user is allowed to fetch the content (all NewsArticles) from Strapi backend via api
        var jwt = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjczMDE1NzM4LCJleHAiOjE2NzU2MDc3Mzh9.GPJ7X4J_sheTAL1MEvVCFVHeenQyhO7E3DBIJE9N6xg";
        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", jwt);
        allNewsArticles = await Http.GetFromJsonAsync<NewsArticles>(url);

        if (allNewsArticles.data != null)
        {
            foreach (var article in allNewsArticles.data)
            {   if(article != null)
                {
                    if(article.Image != null)
                    {
                        article.Image.Url = strapi_api_url + article.Image.Url;

                    }
                }
            }
        }
    }

    public class NewsArticle
    {
        public int Id { get; set; }
        public string Title { get; set; }
        public string Text { get; set; }
        public Image Image { get; set; }
        public List<Category> categories { get; set; }
    }

    public class Image
    {
        public string Url { get; set; }
    }

    public class Category
    {
        public int Id { get; set; }
        public string Topic { get; set; }
        public List<NewsArticle> news_articles { get; set; }
    }

    public class NewsArticles
    {
        public List<NewsArticle> data { get; set; }
    }

}
